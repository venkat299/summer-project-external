# ai_interviewer/utils/wav_helper.py

"""
A utility to add a WAV header to raw PCM audio data.
This is necessary for browsers to correctly decode and play the audio
stream generated by the piper-tts engine.
"""

import struct

def add_wav_header(pcm_data: bytes, sample_rate: int = 16000, channels: int = 1, sample_width: int = 2) -> bytes:
    """
    Adds a standard WAV file header to raw PCM audio data.

    Args:
        pcm_data: The raw audio data as a bytes object.
        sample_rate: The sample rate of the audio (e.g., 16000, 22050).
        channels: The number of audio channels (1 for mono, 2 for stereo).
        sample_width: The number of bytes per sample (2 for 16-bit audio).

    Returns:
        A bytes object containing the complete WAV file data (header + PCM data).
    """
    datasize = len(pcm_data)
    # Total size of the file minus 8 bytes for "RIFF" and file size chunks
    chunksize = 36 + datasize
    
    # WAV header structure
    header = struct.pack('<4sI4s4sIHHIIHH4sI',
                         b'RIFF',      # (4s) Chunk ID
                         chunksize,   # (I) Chunk Size
                         b'WAVE',      # (4s) Format
                         b'fmt ',      # (4s) Sub-chunk 1 ID
                         16,          # (I) Sub-chunk 1 Size (16 for PCM)
                         1,           # (H) Audio Format (1 for PCM)
                         channels,    # (H) Number of Channels
                         sample_rate, # (I) Sample Rate
                         sample_rate * channels * sample_width, # (I) Byte Rate
                         channels * sample_width, # (H) Block Align
                         sample_width * 8, # (H) Bits per Sample
                         b'data',      # (4s) Sub-chunk 2 ID
                         datasize)    # (I) Sub-chunk 2 Size
                         
    return header + pcm_data
